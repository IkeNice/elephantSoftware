unit test;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Grids;

type
  TfmTest = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    Button1: TButton;
    Edit2: TEdit;
    Panel3: TPanel;
    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Panel1Resize(Sender: TObject);
    procedure Panel3Click(Sender: TObject);
    procedure Panel2DragDrop(Sender, Source: TObject; X, Y: Integer);
    procedure Panel2DragOver(Sender, Source: TObject; X, Y: Integer;
      State: TDragState; var Accept: Boolean);
//    procedure ListBox1DragOver(Sender, Source: TObject; X, Y: Integer;
//      State: TDragState; var Accept: Boolean);
//    procedure ListBox2DragOver(Sender, Source: TObject; X, Y: Integer;
//      State: TDragState; var Accept: Boolean);
//    procedure ListBox1DragDrop(Sender, Source: TObject; X, Y: Integer);
//    procedure ListBox2DragDrop(Sender, Source: TObject; X, Y: Integer);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  fmTest: TfmTest;
   x : integer = 0;
   y : integer = 0;
   orderNum :integer = 0;
implementation
{$R *.dfm}

uses test1;

procedure TfmTest.Button1Click(Sender: TObject);
var
  Panel: TPanel;
begin
  orderNum:= orderNum+1;
  Panel:= TPanel.Create(fmTest.Panel2);
  Panel.Parent:= fmTest.Panel2;
  Panel.Align:= alTop;
  Panel.Width:= fmTest.Panel2.Width;
  Panel.Height:= 50;
  Panel.Caption:= 'Заказ № ' + IntToStr(orderNum);
  Panel.DragMode:= dmAutomatic;
  Panel.OnDblClick := Panel3Click;
end;

procedure TfmTest.FormCreate(Sender: TObject);
begin
  Panel2.Width := fmTest.Width div 2;
  Panel1.Width := fmTest.Width div 2;
end;


{
procedure TForm1.ListBox1DragDrop(Sender, Source: TObject; X, Y: Integer);
var i: integer;
begin
for i := 0 to ListBox2.Items.Count - 1 do
  if (ListBox2.Selected[i]) and (ListBox1.Items.IndexOf(ListBox2.Items[i]) < 0) then
    ListBox1.Items.Add(ListBox2.Items[i]);
end;

procedure TForm1.ListBox1DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
  Accept := (Source = ListBox2) and (ListBox2.ItemIndex >= 0);
end;

procedure TForm1.ListBox2DragDrop(Sender, Source: TObject; X, Y: Integer);
var
  s: string;
begin
  if Source = ListBox1 then
  begin
    ListBox2.Items.Add(ListBox1.Items[ListBox1.ItemIndex]);
    ListBox1.Items.Delete(ListBox1.ItemIndex);
    //удаляем перенесенный элемент
  end
  else //внутренняя перестановка
  begin
    s := ListBox2.Items[ListBox2.ItemIndex];
    ListBox2.Items.Delete(ListBox2.ItemIndex);
    ListBox2.Items.Insert(ListBox2.ItemAtPos(Point(X, Y), False), s);
    //находим, в какую позицию переносить и вставляем
  end;
end;

procedure TForm1.ListBox2DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
  Accept := (Source is TListBox) and ((Source as TListBox).ItemIndex >= 0);
end;
}
procedure TfmTest.Panel1Resize(Sender: TObject);
begin
  Panel1.Width := fmTest.Width div 2;
  Panel2.Left := fmTest.Width;
  Panel2.Width := fmTest.Width div 2;
end;

procedure TfmTest.Panel2DragDrop(Sender, Source: TObject; X, Y: Integer);
begin
  TPanel(Source).Parent := TScrollBox(Sender);  // для ScrollBox
  TPanel(Source).Left:=X;
  TPanel(Source).Top:=Y;
end;

procedure TfmTest.Panel2DragOver(Sender, Source: TObject; X, Y: Integer;
  State: TDragState; var Accept: Boolean);
begin
 Accept:=true;
end;

procedure TfmTest.Panel3Click(Sender: TObject);
begin
  fmTest1.ShowModal;
end;

end.
